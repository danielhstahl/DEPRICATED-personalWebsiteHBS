/*my ops risk model*/
"use strict";
var Complex = require('Complex'); //exportable class
var ode = require('rungeKutta'); //exportable class
var FangOosterlee = require('FangOosterlee'); //exportable class

process.on('message', function(options) {
  var a = options.a;
  var c = options.c;
  var d = options.d;
  var lambda = options.lambda;
  var delta = options.delta / (c * d * lambda);
  var v0 = options.v0;
  var cmplv0 = new Complex(v0, 0);
  var b = 1 - d * c * lambda * delta;
  //console.log(b); how can this be negative???
  var t = options.t;
  var sigma = options.sigma;
  var n = options.n;
  var l = options.l;
  var k = options.k;
  var deltaC = new Complex(-delta, 0);
  var lambdaC = new Complex(lambda, 0);
  var unity = new Complex(1, 0);
  var sigSq = new Complex(sigma * sigma * .5, 0);
  var cC = new Complex(-c, 0);
  var aC = new Complex(a, 0);
  var ab = new Complex(a * b, 0);
  var options = {
    n: n,
    initialY: 0,
    initialX: 0,
    maxX: t,
    complex: true
  };
  var beta = function(bet, u) {
    var chat = new Complex(c, 0).divide(u.multiply(cC).add(unity));
    return u.multiply(cC).add(unity).multiply(bet.multiply(deltaC).multiply(chat).add(unity)).power(-d).multiply(lambdaC).subtract(lambdaC).subtract(bet.multiply(aC)).add(bet.multiply(bet).multiply(sigSq));
  }
  var alpha = function(bet) {
    return bet.multiply(ab);
  }
  var chrFunc = {
    execute: function(u) {
      var rngBeta = ode(function(x, y) {
        return beta(y, u);
      }, options); //.execute(); //ineffecient...can do both rngBeta and rngAlpha in one for loop...is that really faster?  2*n vs n*2...
      var rngAlpha = ode(function(x, y) {
        return alpha(y);
      }, options); //.execute();
      //console.log(rngBeta);
      return rngBeta.y[options.n].multiply(cmplv0).add(rngAlpha.y[options.n]).exp();
    }

  }
  var computeDist = new FangOosterlee(l, k);
  var res = computeDist.computeDistribution(chrFunc, 0, d * c * lambda * t * 10); /*very rough...10 is arbitrary*/
  process.send({
    result: res
  });
  process.send({
    close: "close"
  });
});
