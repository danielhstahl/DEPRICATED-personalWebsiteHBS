"use strict";
var Complex=require('Complex'); //exportable class
var matrix=function(arr){
  this.mLength=arr.length;
  this.complex=false;
  this.arrayPart=arr;
  if(!arr.real&&arr.real!==0){
    this.complex=true;
  }
  var self=this;
  this.add=function(y){
    if(!y.length){ //then scalar
      var returnedArray=[];
      if(self.complex){
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i].add(y);
        }
      }
      else{
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i]+y;
        }
      }

      return returnedArray;
    }
    else if(y.length===self.mLength){
      var returnedArray=[];
      if(self.complex){
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i].add(y[i]);
        }
      }
      else{
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i]+y[i];
        }
      }

      return returnedArray;
    }

    else{
      return "arrays must have same length";
    }
  }
  this.divide=function(y){
    if(!y.length){ //then scalar
      var returnedArray=[];
      if(self.complex){
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i].divide(y);
        }
      }
      else{
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i]/y;
        }
      }

      return returnedArray;
    }
    else if(y.length===self.mLength){
      var returnedArray=[];
      if(self.complex){
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i].divide(y[i]);
        }
      }
      else{
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i]/y[i];
        }
      }

      return returnedArray;
    }

    else{
      return "arrays must have same length";
    }
  }
  this.multiply=function(y){
    if(!y.length){ //then scalar
      var returnedArray=[];
      if(self.complex){
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i].multiply(y);
        }
      }
      else{
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i]*y;
        }
      }

      return returnedArray;
    }
    else if(y.length===self.mLength){
      var returnedArray=[];
      if(self.complex){
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i].multiply(y[i]);
        }
      }
      else{
        for(var i=0; i<self.mLength; i++){
          returnedArray[i]=arr[i]*y[i];
        }
      }

      return returnedArray;
    }

    else{
      return "arrays must have same length";
    }
  }
}
module.exports=matrix; //exportable class
